시나리오)스프링 부트에서 http://localhost:8080만을 열 수 있는 간단한 웹 소스를 개발한다.
개발한 소스를 github에 업로드하면 github action이 작동하여 소스 코드를 jar파일을 생성하고
aws의 웹 배포파일을 github action의 가상머신에서 aws에 jar파일을 업로드하고 nohup을 이용하여 백그라운드에 작동시키는 과정을 작성한다.
추가적으로 기존에 실행되는 jar파일은 중지 또는 프로세스 종료하도록 설정한다.

#사용자 데이터
#!/bin/bash
apt-get update -y
apt-get install -y openjdk-17-jdk
JAVA_HOME_PATH=$(readlink -f /usr/bin/java | sed "s:bin/java::")
echo "export JAVA_HOME=${JAVA_HOME_PATH}" >> /etc/profile
echo 'export PATH=$JAVA_HOME/bin:$PATH' >> /etc/profile

#workflows/main.yml파일 생성
name: Deploy to AWS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build JAR package
        run: mvn clean package -DskipTests

      - name: Upload JAR to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USER }}
          key: ${{ secrets.AWS_KEY }}
          source: "target/*.jar"
          target: "/home/${{ secrets.AWS_USER }}/app/"  # target 디렉터리 아님, app 바로 밑에 저장

      - name: SSH and restart app safely
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USER }}
          key: ${{ secrets.AWS_KEY }}
          script: |
            set -euxo pipefail
            APP_DIR="/home/${{ secrets.AWS_USER }}/app"

            echo "===== Starting new app ====="
            JAR_FILE=$(ls -t "$APP_DIR"/target/*.jar | head -n 1)
            if [ -z "$JAR_FILE" ]; then
              echo "ERROR: No JAR file found in $APP_DIR"
              exit 1
            fi

            nohup setsid java -jar "$JAR_FILE" > "$APP_DIR/app.log" 2>&1 & disown

            sleep 5
            echo "===== Running java processes ====="
            ps -ef | grep java || true

            echo "===== Tail app.log ====="
            tail -n 20 "$APP_DIR/app.log" || true

##spring boot web 개발
@SpringBootApplication
@RestController
public class WwwApplication {

	public static void main(String[] args) {
		SpringApplication.run(WwwApplication.class, args);
	}

	 @GetMapping("/")
	    public String home() {
	        return "Hello, Spring Boot!";
	    }	
}